<?xml version="1.0" encoding="UTF-8"?>
	
	<!-- 30초마다 설정 파일의 변경을 확인한다. 파일이 변경되면 다시 로딩한다 -->
	<configuration scan="true" scanPeriod="30 seconds">
	 
    <!-- 외부 설정파일을 사용할 수 있다. -->
    <!-- <property resource="${webapp.root}/WEB-INF/log/resource.properties"/> -->

	<!-- console로 log 남기기 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>
				▶ [%-5level] %d{HH:mm:ss} || %logger[%method:%line] - %msg%n
			</pattern>
		</encoder>
	</appender>
	<appender name="consoleForLoginInterceptor" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>
				▷ [%-5level] %d{HH:mm:ss} || %logger[%method:%line] - %msg%n
			</pattern>
		</encoder>
	</appender>
 
	<!-- file로 log 남기기 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>
				▶ [%-5level] %d{HH:mm:ss} || %logger[%method:%line] - %msg%n
			</pattern>
		</encoder>
	</appender>
    
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>/Volumes/SD/workspace/SeoulAuction/seoulauction/src/main/webapp/WEB-INF/log/application.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 파일이 하루에 한개씩 생성된다 -->
            <fileNamePattern>application.%d{yyyy-MM-dd}.log</fileNamePattern>
 
            <!-- maxHIstory 설정은 위 부분에 롤링 정책에 따라 적용되 된다고 보면된다.
             위 설정데로 라면 30일이 지난 파일은 삭제가 된다.-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>
				▶ %-5level %d{HH:mm:ss.SSS} [%thread] %logger[%method:%line] - %msg%n
				<!-- [%method:%line] : 어떤 메소드에 어떤 라인에서 찍혔는지 %msg%n : 찍고 싶은 로그-->
			</pattern>
        </encoder>
    </appender>
	
    <logger name="org.springframework" level="debug"/>
    <logger name="net.sf.ehcache" level="debug"/>
    <logger name="org.mybatis" level="debug"/>
    <logger name="to.my.code" level="debug"/>
    
    <root level="debug">
        <appender-ref ref="console"/>
        <appender-ref ref="FILE"/>
    </root>
    
    <!-- 
    <if condition='property("RUN_MODE").equals("SERVICE")'>
        <then>
            설정파일에 RUN_MODE 가 SERVICE로 정의되어 있으면 로깅 레벨을 INFO로 지정
            <root level="info">
                <appender-ref ref="console"/>
                <appender-ref ref="FILE"/>
            </root>
        </then>
        설정파일에 RUN_MODE 가 SERVICE로 정의되어 있지 않으면  로깅 레벨을 DEBUG 지정
        <else>
            <root level="debug">
                <appender-ref ref="console"/>
                <appender-ref ref="FILE"/>
            </root>
        </else>
    </if>
     -->
	</configuration>