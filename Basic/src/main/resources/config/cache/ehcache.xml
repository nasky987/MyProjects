<?xml version="1.0" encoding="UTF-8"?>
<ehcache
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"
	updateCheck="false">
	<!--
		참고 : http://egloos.zum.com/js7309/v/11143838
		<ecache> 엘리먼트에 사용가능한 옵션
		* maxBytesLocalHeap="32M" : 최대 로컬 힙메모리 사용량 설정, 1k, 1m, 1g 해당 옵션을 사용할 경우 maxEntriesLocalHeap 설정은 사용 할 수 없음.
		* maxBytesLocalOffHeap="128M" : 로컬 VM의 최대 offHeap 사용량을 설정 
  		* maxBytesLocalDisk="0M" : maxBytesLocalHeap에 설정된 캐시 사용 이후에 대한 디스크 스토리지의 한계를 설정
  		* updateCheck="false
	-->
	<!--
		디스크 저장소에 캐싱시 사용하는 위치(캐시 사용하는 이유가 없어지므로 왠만하면 사용X)
		* user.home - User's home directory
		* user.dir - User's current working directory
		* java.io.tmpdir - Default temp file path (Windows = C:\Users\user\AppData\Local\Temp, linux = /tmp)
		* ehcache.disk.store.dir - A system property 	
	-->
	<!--
	<diskStore path="java.io.tmpdir" />
	-->
	
	<!--
		참고 : http://linuxism.tistory.com/1198, http://theeye.pe.kr/archives/1593
		* name : 캐쉬 이름(필수)
		* maxElementsInMemory : 메모리에 저장될 수 있는 객체의 최대 개수(필수)
		* eternal : 이 값이 true이면 timeout 관련 설정은 무시되고, Element가 캐시에서 삭제되지 않는다.(필수)
		* overflowToDisk : 메모리에 저장된 객체 개수가 maxElementsInMemory에서 지정한 값에 다다를 경우 디스크에 오버플로우 되는 객체는 저장할 지의 여부를 지정한다.(필수)
		* timeToIdleSeconds : Element가 지정한 시간 동안 사용(조회)되지 않으면 캐시에서 제거된다. 이 값이 0인 경우 조회 관련 만료 시간을 지정하지 않는다. 기본값은 0이다.(선택)
		* timeToLiveSeconds : Element가 존재하는 시간. 이 시간이 지나면 캐시에서 제거된다. 이 시간이 0이면 만료 시간을 지정하지 않는다. 기본값은 0이다. 0이면 무한.(초단위 : 3600(1H))(선택)
		* diskPersistent : VM이 재 가동할 때 디스크 저장소에 캐싱된 객체를 저장할지의 여부를 지정한다. 기본값은 false이다.(선택)
		* diskExpiryThreadIntervalSeconds : Disk Expiry 쓰레드의 수행 시간 간격을 초 단위로 지정한다. 기본값은 120 이다.(선택)
		* memoryStoreEvictionPolicy : 객체의 개수가 maxElementsInMemory에 도달했을 때, 메모리에서 객체를 어떻게 제거할지에 대한 정책을 지정한다. 기본값은 LRU이다. FIFO와 LFU도 지정할 수 있다.(선택)
		* LRU = 가장 오랫동안 사용하지 않는 캐시데이터를 먼저 지우는 알고리즘
		* FIFO = 먼저 새성된 캐시데이터를 먼저 지우는 알고리즘
	-->
	
	<!-- 기본 캐싱 전략 -->
	<defaultCache
		maxElementsInMemory="50000"
		eternal="false"
		overflowToDisk="false"
		timeToIdleSeconds="0"
		timeToLiveSeconds="0"
		diskPersistent="false"
		diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU">
	</defaultCache>
	
	<!-- 사용자정의 캐싱 전략(아래와 같은 방식으로 여러개 생성 가능) -->
	<cache
		name="customCache"
		maxElementsInMemory="50000"
		eternal="false"
		timeToIdleSeconds="600"
		timeToLiveSeconds="0"
		overflowToDisk="false"
		diskPersistent="false"
		diskExpiryThreadIntervalSeconds="120"
		memoryStoreEvictionPolicy="LRU">
	</cache>
</ehcache>